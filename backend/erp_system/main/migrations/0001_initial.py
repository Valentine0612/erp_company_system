# Generated by Django 3.2.8 on 2021-11-25 09:04

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django_resized.forms
import main.models
import main.validators
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('login', models.CharField(max_length=200, unique=True)),
                ('avatar', django_resized.forms.ResizedImageField(crop=['middle', 'center'], default='/default_user/user.png', force_format='JPEG', keep_meta=True, quality=90, size=[300, 300], upload_to=main.models.create_avatar_path)),
                ('name', models.CharField(max_length=100)),
                ('surname', models.CharField(max_length=100)),
                ('patronymic', models.CharField(blank=True, max_length=100)),
                ('phone', models.CharField(max_length=15, validators=[django.core.validators.RegexValidator(regex='^\\+?[1-9]?\\d{9,15}$')])),
                ('is_manager', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('open_code', models.CharField(blank=True, default='', editable=False, max_length=32)),
                ('otp_code', models.CharField(blank=True, default='', editable=False, max_length=32)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'user',
            },
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=200, unique=True)),
                ('short_name', models.CharField(db_index=True, max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('address', models.CharField(max_length=500)),
                ('company_type', models.CharField(choices=[('LLC', 'ООО'), ('SP', 'Индивидуальный предприниматель')], default='LLC', max_length=30)),
                ('owner', models.CharField(default='', max_length=200)),
                ('code', models.CharField(max_length=10, null=True, unique=True)),
                ('phone', models.CharField(max_length=15, validators=[django.core.validators.RegexValidator(regex='^\\+?[1-9]?\\d{9,15}$')])),
                ('inn', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator(regex='^\\d{10,12}$')])),
                ('kpp', models.CharField(blank=True, max_length=20, null=True, validators=[django.core.validators.RegexValidator(regex='^\\d{9}$')])),
                ('ogrn', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator(regex='^\\d{13,15}$')])),
                ('okpo', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator(regex='^\\d{8}$')])),
                ('rs', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator(regex='^\\d{20}$')])),
                ('ks', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator(regex='^\\d{20}$')])),
                ('bik', models.CharField(max_length=9, validators=[django.core.validators.RegexValidator(regex='^\\d{9}$')])),
                ('bank_info', models.CharField(max_length=200)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'companie',
                'db_table': 'company',
            },
        ),
        migrations.CreateModel(
            name='CompanyUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state', models.CharField(choices=[('READY', 'Готов к работе'), ('PROBLEM', 'Есть проблемы'), ('BAN', 'Черный список'), ('CHECK', 'Проверка документов'), ('WAITING_EMP', 'Ожидание подписания Исполнителем'), ('REFUSED', 'Отказался'), ('DENIDED', 'Документы отклонены')], default='CHECK', max_length=30)),
                ('about', models.TextField(blank=True, null=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='get_company', to='main.company')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='get_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'company_user',
                'ordering': ['company', 'user__is_manager'],
                'unique_together': {('company', 'user')},
            },
        ),
        migrations.CreateModel(
            name='CompanyUserDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='', max_length=100)),
                ('document', models.FileField(upload_to=main.models.create_directory_path_for_company, validators=[main.validators.validate_file_extension])),
                ('company_document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='main.companyuser')),
            ],
            options={
                'db_table': 'company_user_document',
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'verbose_name': 'countrie',
                'db_table': 'country',
            },
        ),
        migrations.CreateModel(
            name='MetaDataUserDocument',
            fields=[
                ('document', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='main.companyuserdocument')),
                ('document_uuid', models.UUIDField(default=uuid.uuid4, unique=True)),
                ('data', models.JSONField()),
            ],
            options={
                'db_table': 'metadata_user_document',
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='main.user')),
                ('type', models.CharField(choices=[('SP', 'Индивидуальный предприниматель'), ('SE', 'Самозанятый'), ('NP', 'Физ. лицо'), ('FR', 'РИГ')], default='NP', max_length=2)),
                ('passport', models.CharField(max_length=20, null=True)),
                ('issued', models.DateField(null=True)),
                ('issued_code', models.CharField(blank=True, default='', max_length=7, null=True, validators=[django.core.validators.RegexValidator(regex='^\\d{3}-\\d{3}$')])),
                ('place_of_issue', models.CharField(default='', max_length=300, null=True)),
                ('inn', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator(regex='^\\d{10,12}$')])),
                ('snils', models.CharField(max_length=14, null=True, validators=[django.core.validators.RegexValidator(regex='^\\d{3}-\\d{3}-\\d{3}\\s\\d{2}$')])),
                ('dob', models.DateField(null=True)),
                ('pob', models.CharField(max_length=200, null=True)),
                ('residence', models.CharField(max_length=200)),
                ('ogrnip', models.CharField(blank=True, default='', max_length=15, null=True, validators=[django.core.validators.RegexValidator(regex='^\\d{15}$')])),
                ('citizenship', models.ForeignKey(default='Российская Федерация', on_delete=django.db.models.deletion.PROTECT, related_name='profiles', to='main.country', to_field='name')),
            ],
            options={
                'db_table': 'profile',
            },
        ),
        migrations.CreateModel(
            name='ManagerComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('body', models.TextField(blank=True, null=True)),
                ('user', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='main.companyuser')),
            ],
            options={
                'db_table': 'comment',
            },
        ),
        migrations.AddField(
            model_name='user',
            name='company',
            field=models.ManyToManyField(related_name='user', through='main.CompanyUser', to='main.Company'),
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
        migrations.CreateModel(
            name='BankDetail',
            fields=[
                ('profile', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='main.profile')),
                ('cardholder_name', models.CharField(max_length=150)),
                ('bik', models.CharField(blank=True, max_length=9, validators=[django.core.validators.RegexValidator(regex='^\\d{9}$')])),
                ('card', models.CharField(blank=True, max_length=19, validators=[django.core.validators.RegexValidator(regex='^\\d{13,16}$')])),
                ('bank_account', models.CharField(blank=True, max_length=20, validators=[django.core.validators.RegexValidator(regex='^\\d{20}$')])),
            ],
            options={
                'db_table': 'bank_detail',
            },
        ),
        migrations.CreateModel(
            name='UserDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='', max_length=100)),
                ('image', models.FileField(upload_to=main.models.create_directory_path, validators=[main.validators.validate_file_extension])),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='main.profile')),
            ],
            options={
                'db_table': 'user_documents',
            },
        ),
    ]
